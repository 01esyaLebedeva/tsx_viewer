import React, { useState } from 'react';

const emoji = {
  Calendar: 'üìÖ',
  Target: 'üéØ',
  Trophy: 'üèÜ',
  Clock: '‚è∞',
  Dumbbell: 'üèãÔ∏è',
  CheckCircle: '‚úÖ',
  Circle: '‚ö™',
  ChevronRight: '‚ñ∂Ô∏è',
  ChevronLeft: '‚óÄÔ∏è',
  Star: '‚≠ê',
  Flame: 'üî•',
  Users: 'üë•',
};

const WorkoutProgram = () => {
  const [currentWeek, setCurrentWeek] = useState(1);
  const [completedWorkouts, setCompletedWorkouts] = useState(new Set());
  const [activeDay, setActiveDay] = useState(null);

  const toggleWorkout = (workoutId) => {
    const newCompleted = new Set(completedWorkouts);
    if (newCompleted.has(workoutId)) {
      newCompleted.delete(workoutId);
    } else {
      newCompleted.add(workoutId);
    }
    setCompletedWorkouts(newCompleted);
  };

  const weeks = {
    1: {
      title: "–ù–ï–î–ï–õ–Ø 1-2: –ê–î–ê–ü–¢–ê–¶–ò–Ø –ò –û–°–ù–û–í–´",
      description: "–ò–∑—É—á–µ–Ω–∏–µ —Ç–µ—Ö–Ω–∏–∫–∏, —É–∫—Ä–µ–ø–ª–µ–Ω–∏–µ –∫–æ–ª–µ–Ω–µ–π, –ø—Ä–∏–≤—ã–∫–∞–Ω–∏–µ –∫ –Ω–∞–≥—Ä—É–∑–∫–µ",
      workouts: [
        {
          id: 'w1-mon',
          day: '–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫',
          type: '–°–∏–ª–æ–≤–∞—è –ê',
          duration: '15-20 –º–∏–Ω',
          focus: '–ù–æ–≥–∏ + —è–≥–æ–¥–∏—Ü—ã',
          exercises: [
            { name: '–ü—Ä–∏—Å–µ–¥–∞–Ω–∏—è –Ω–∞ —Å—Ç—É–ª', sets: 2, reps: '8-10', weight: '1–∫–≥', note: '–î–ª—è –∫–æ–ª–µ–Ω–µ–π!' },
            { name: '–ü–æ–¥—ä–µ–º—ã –Ω–∞ –Ω–æ—Å–∫–∏ —Å –≤–µ—Å–æ–º', sets: 2, reps: '12-15', weight: '2x1–∫–≥' },
            { name: '–û—Ç–≤–µ–¥–µ–Ω–∏–µ –Ω–æ–≥–∏ –Ω–∞–∑–∞–¥ —Å—Ç–æ—è', sets: 2, reps: '10 –∫–∞–∂–¥–æ–π', weight: '–ë–µ–∑ –≤–µ—Å–∞' },
            { name: '–ü–æ–¥—ä–µ–º—ã –Ω–æ–≥–∏ –≤ —Å—Ç–æ—Ä–æ–Ω—É –ª–µ–∂–∞', sets: 2, reps: '8-10 –∫–∞–∂–¥–æ–π', weight: '–ë–µ–∑ –≤–µ—Å–∞', note: '–î–ª—è "–≥–∞–ª–∏—Ñ–µ"' }
          ]
        },
        {
          id: 'w1-wed',
          day: '–°—Ä–µ–¥–∞',
          type: '–°–∏–ª–æ–≤–∞—è –ë',
          duration: '15-20 –º–∏–Ω',
          focus: '–ù–æ–≥–∏ + —É–∫—Ä–µ–ø–ª–µ–Ω–∏–µ –∫–æ–ª–µ–Ω–µ–π',
          exercises: [
            { name: '–ü–æ–¥—ä–µ–º—ã –Ω–∞ —Å—Ç—É–ø–µ–Ω—å–∫—É', sets: 2, reps: '6-8 –∫–∞–∂–¥–æ–π', weight: '1–∫–≥' },
            { name: '–ú–æ—Å—Ç–∏–∫ —è–≥–æ–¥–∏—á–Ω—ã–π', sets: 2, reps: '10-12', weight: '1–∫–≥ –Ω–∞ –∂–∏–≤–æ—Ç' },
            { name: '–í—ã–ø–∞–¥—ã –Ω–∞–∑–∞–¥ –∫ —Å—Ç—É–ª—É', sets: 2, reps: '5-6 –∫–∞–∂–¥–æ–π', weight: '–ë–µ–∑ –≤–µ—Å–∞', note: '–û—Å—Ç–æ—Ä–æ–∂–Ω–æ!' },
            { name: '–ü–æ–¥—ä–µ–º—ã –ø—Ä—è–º–æ–π –Ω–æ–≥–∏ –ª–µ–∂–∞', sets: 2, reps: '8 –∫–∞–∂–¥–æ–π', weight: '–ë–µ–∑ –≤–µ—Å–∞' }
          ]
        },
        {
          id: 'w1-fri',
          day: '–ü—è—Ç–Ω–∏—Ü–∞',
          type: '–ö–æ–º–±–∏',
          duration: '18-20 –º–∏–Ω',
          focus: '–°–∏–ª–æ–≤–∞—è + –ª–µ–≥–∫–æ–µ –∫–∞—Ä–¥–∏–æ',
          exercises: [
            { name: '–°–∏–ª–æ–≤–æ–π –±–ª–æ–∫', sets: 1, reps: '–ö–∞–∂–¥–æ–µ –ø–æ 8-12', weight: '1–∫–≥', note: '8 –º–∏–Ω—É—Ç' },
            { name: '–ö–∞—Ä–¥–∏–æ –±–ª–æ–∫', sets: 8, reps: '30 —Å–µ–∫ —Ä–∞–±–æ—Ç–∞/30 —Å–µ–∫ –æ—Ç–¥—ã—Ö', weight: '–ë–µ–∑ –≤–µ—Å–∞', note: '8 –º–∏–Ω—É—Ç' }
          ]
        }
      ]
    },
    2: {
      title: "–ù–ï–î–ï–õ–Ø 3-4: –ü–†–û–ì–†–ï–°–°–ò–Ø",
      description: "–£–≤–µ–ª–∏—á–µ–Ω–∏–µ –Ω–∞–≥—Ä—É–∑–∫–∏, –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ä–µ–∑–∏–Ω–æ–∫, –Ω–æ–≤—ã–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è",
      workouts: [
        {
          id: 'w2-mon',
          day: '–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫',
          type: '–°–∏–ª–æ–≤–∞—è –ê+',
          duration: '20-25 –º–∏–Ω',
          focus: '–ù–æ–≥–∏ + —è–≥–æ–¥–∏—Ü—ã + —Ä–µ–∑–∏–Ω–∫–∏',
          exercises: [
            { name: '–ü—Ä–∏—Å–µ–¥–∞–Ω–∏—è —Å —Ä–µ–∑–∏–Ω–∫–æ–π', sets: 3, reps: '12-15', weight: '2–∫–≥', note: '–†–µ–∑–∏–Ω–∫–∞ –Ω–∞ –±–µ–¥—Ä–∞—Ö' },
            { name: '–ü–æ–¥—ä–µ–º—ã –Ω–∞ –Ω–æ—Å–∫–∏ —Å –≤–µ—Å–æ–º', sets: 3, reps: '15-18', weight: '2x1–∫–≥' },
            { name: '–û—Ç–≤–µ–¥–µ–Ω–∏–µ –Ω–æ–≥–∏ –Ω–∞–∑–∞–¥ —Å —Ä–µ–∑–∏–Ω–∫–æ–π', sets: 3, reps: '12 –∫–∞–∂–¥–æ–π', weight: '–†–µ–∑–∏–Ω–∫–∞' },
            { name: '–ë–æ–∫–æ–≤—ã–µ –≤—ã–ø–∞–¥—ã —Å –æ–ø–æ—Ä–æ–π', sets: 2, reps: '8-10 –∫–∞–∂–¥–æ–π', weight: '1–∫–≥' }
          ]
        },
        {
          id: 'w2-wed',
          day: '–°—Ä–µ–¥–∞',
          type: '–°–∏–ª–æ–≤–∞—è –ë+',
          duration: '20-25 –º–∏–Ω',
          focus: '–£–∫—Ä–µ–ø–ª–µ–Ω–∏–µ + –ø—Ä–æ–≥—Ä–µ—Å—Å–∏—è',
          exercises: [
            { name: '–ü–æ–¥—ä–µ–º—ã –Ω–∞ —Å—Ç—É–ø–µ–Ω—å–∫—É', sets: 3, reps: '10-12 –∫–∞–∂–¥–æ–π', weight: '2–∫–≥' },
            { name: '–ú–æ—Å—Ç–∏–∫ —è–≥–æ–¥–∏—á–Ω—ã–π', sets: 3, reps: '15-18', weight: '2–∫–≥ –Ω–∞ –∂–∏–≤–æ—Ç' },
            { name: '–û—Ç–≤–µ–¥–µ–Ω–∏–µ –Ω–æ–≥–∏ –≤ —Å—Ç–æ—Ä–æ–Ω—É —Å —Ä–µ–∑–∏–Ω–∫–æ–π', sets: 2, reps: '12 –∫–∞–∂–¥–æ–π', weight: '–†–µ–∑–∏–Ω–∫–∞' },
            { name: '–ü–æ–¥—ä–µ–º—ã –ø—Ä—è–º–æ–π –Ω–æ–≥–∏ –ª–µ–∂–∞', sets: 3, reps: '12 –∫–∞–∂–¥–æ–π', weight: '–ë–µ–∑ –≤–µ—Å–∞' }
          ]
        },
        {
          id: 'w2-fri',
          day: '–ü—è—Ç–Ω–∏—Ü–∞',
          type: '–ö–æ–º–±–∏+',
          duration: '22-25 –º–∏–Ω',
          focus: '–ò–Ω—Ç–µ–Ω—Å–∏–≤–Ω–∞—è –∫–æ–º–±–∏',
          exercises: [
            { name: '–°–∏–ª–æ–≤–æ–π –±–ª–æ–∫ —É—Å–∏–ª–µ–Ω–Ω—ã–π', sets: 2, reps: '–ö–∞–∂–¥–æ–µ –ø–æ 10-15', weight: '2–∫–≥', note: '10 –º–∏–Ω—É—Ç' },
            { name: '–ö–∞—Ä–¥–∏–æ –±–ª–æ–∫ –∏–Ω—Ç–µ–Ω—Å–∏–≤–Ω—ã–π', sets: 10, reps: '40 —Å–µ–∫ —Ä–∞–±–æ—Ç–∞/20 —Å–µ–∫ –æ—Ç–¥—ã—Ö', weight: '–° —Ä–µ–∑–∏–Ω–∫–∞–º–∏', note: '10 –º–∏–Ω—É—Ç' }
          ]
        }
      ]
    }
  };

  const goals = [
    { icon: 'üéØ', text: "–ü–æ–¥—Ç—è–Ω—É—Ç—å –º—ã—à—Ü—ã", color: "bg-pink-100 text-pink-600" },
    { icon: 'üî•', text: "–£–±—Ä–∞—Ç—å –∂–∏—Ä", color: "bg-orange-100 text-orange-600" },
    { icon: '‚≠ê', text: "–£–ª—É—á—à–∏—Ç—å —Ñ–æ—Ä–º—É", color: "bg-purple-100 text-purple-600" },
    { icon: 'üèÜ', text: "–£–∫—Ä–µ–ø–∏—Ç—å –∫–æ–ª–µ–Ω–∏", color: "bg-green-100 text-green-600" }
  ];

  const equipment = [
    { name: "–ì–∞–Ω—Ç–µ–ª–∏ 1–∫–≥", count: "4 —à—Ç.", price: "–µ—Å—Ç—å", status: "‚úÖ" },
    { name: "–†–µ–∑–∏–Ω–∫–∏/–ø–µ—Ç–ª–∏", count: "—Å—Ä–µ–¥–Ω—è—è –∂–µ—Å—Ç–∫–æ—Å—Ç—å", price: "200-500‚ÇΩ", status: "üõí" },
    { name: "–ö–æ–≤—Ä–∏–∫ –¥–ª—è –π–æ–≥–∏", count: "1 —à—Ç.", price: "300-800‚ÇΩ", status: "üõí" }
  ];

  const results = [
    "–£–∫—Ä–µ–ø–ª–µ–Ω–Ω—ã–µ –∫–æ–ª–µ–Ω–∏ - –º–µ–Ω—å—à–µ –±–æ–ª–µ–π –ø—Ä–∏ —Ö–æ–¥—å–±–µ",
    "–ü–æ–¥—Ç—è–Ω—É—Ç—ã–µ —è–≥–æ–¥–∏—Ü—ã –∏ –±–µ–¥—Ä–∞",
    "–£–ª—É—á—à–µ–Ω–Ω–∞—è –≤—ã–Ω–æ—Å–ª–∏–≤–æ—Å—Ç—å",
    "–ü—Ä–∏–≤—ã—á–∫–∞ –∫ —Ä–µ–≥—É–ª—è—Ä–Ω—ã–º —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞–º",
    "–ë–æ–ª–µ–µ —á–µ—Ç–∫–∏–π —Ä–µ–ª—å–µ—Ñ –Ω–æ–≥"
  ];

  const WorkoutCard = ({ workout }) => {
    const isCompleted = completedWorkouts.has(workout.id);
    const isActive = activeDay === workout.id;
    
    return (
      <div className={`border-2 rounded-xl p-6 transition-all duration-300 ${
        isCompleted ? 'border-green-300 bg-green-50' : 'border-gray-200 bg-white'
      } ${isActive ? 'ring-4 ring-blue-200 shadow-lg' : 'hover:shadow-md'}`}>
        <div className="flex items-center justify-between mb-4">
          <div className="flex items-center space-x-3">
            <div className={`p-2 rounded-lg ${
              isCompleted ? 'bg-green-100' : 'bg-blue-100'
            }`}>
              <span style={{fontSize: 20}}>{emoji.Dumbbell}</span>
            </div>
            <div>
              <h3 className="font-bold text-lg">{workout.day}</h3>
              <p className="text-sm text-gray-600">{workout.type}</p>
            </div>
          </div>
          <button
            onClick={() => toggleWorkout(workout.id)}
            className="transition-colors duration-200"
          >
            {isCompleted ? 
              <span style={{fontSize: 22}}>{emoji.CheckCircle}</span> : 
              <span style={{fontSize: 22}}>{emoji.Circle}</span>
            }
          </button>
        </div>
        
        <div className="grid grid-cols-2 gap-4 mb-4">
          <div className="flex items-center space-x-2">
            <span style={{fontSize: 16}}>{emoji.Clock}</span>
            <span className="text-sm font-medium">{workout.duration}</span>
          </div>
          <div className="flex items-center space-x-2">
            <span style={{fontSize: 16}}>{emoji.Target}</span>
            <span className="text-sm font-medium">{workout.focus}</span>
          </div>
        </div>

        <button
          onClick={() => setActiveDay(activeDay === workout.id ? null : workout.id)}
          className="w-full py-2 px-4 bg-blue-50 hover:bg-blue-100 text-blue-700 rounded-lg transition-colors duration-200 flex items-center justify-center space-x-2"
        >
          <span>{isActive ? '–°–∫—Ä—ã—Ç—å —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è' : '–ü–æ–∫–∞–∑–∞—Ç—å —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è'}</span>
          <span style={{fontSize: 16}}>{emoji.ChevronRight}</span>
        </button>

        {isActive && (
          <div className="mt-4 space-y-3 animate-in slide-in-from-top-2 duration-300">
            {workout.exercises.map((exercise, idx) => (
              <div key={idx} className="bg-gray-50 rounded-lg p-3">
                <div className="flex justify-between items-start mb-2">
                  <h4 className="font-semibold text-gray-800">{exercise.name}</h4>
                  {exercise.note && (
                    <span className="text-xs bg-yellow-100 text-yellow-700 px-2 py-1 rounded">
                      {exercise.note}
                    </span>
                  )}
                </div>
                <div className="grid grid-cols-3 gap-2 text-sm text-gray-600">
                  <div><strong>–ü–æ–¥—Ö–æ–¥—ã:</strong> {exercise.sets}</div>
                  <div><strong>–ü–æ–≤—Ç–æ—Ä—ã:</strong> {exercise.reps}</div>
                  <div><strong>–í–µ—Å:</strong> {exercise.weight}</div>
                </div>
              </div>
            ))}
          </div>
        )}
      </div>
    );
  };

  const completedCount = completedWorkouts.size;
  const totalWorkouts = Object.values(weeks).reduce((sum, week) => sum + week.workouts.length, 0);
  const progressPercentage = (completedCount / totalWorkouts) * 100;

  return (
    <div className="min-h-screen bg-gradient-to-br from-pink-50 via-purple-50 to-blue-50">
      <div className="max-w-6xl mx-auto p-6">
        {/* Header */}
        <div className="text-center mb-8">
          <h1 className="text-4xl font-bold bg-gradient-to-r from-pink-600 to-purple-600 bg-clip-text text-transparent mb-4">
            üèãÔ∏è‚Äç‚ôÄÔ∏è –ü–†–û–ì–†–ê–ú–ú–ê "–ö–†–ê–°–ò–í–´–ï –ù–û–ì–ò"
          </h1>
          <p className="text-xl text-gray-600 mb-6">4 –Ω–µ–¥–µ–ª–∏ –∫ –∫—Ä–∞—Å–∏–≤—ã–º –∏ —Å–∏–ª—å–Ω—ã–º –Ω–æ–≥–∞–º</p>
          
          {/* Progress Bar */}
          <div className="bg-white rounded-lg p-4 shadow-sm mb-6">
            <div className="flex justify-between items-center mb-2">
              <span className="text-sm font-medium text-gray-700">–ü—Ä–æ–≥—Ä–µ—Å—Å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è</span>
              <span className="text-sm font-bold text-gray-900">{completedCount}/{totalWorkouts}</span>
            </div>
            <div className="w-full bg-gray-200 rounded-full h-3">
              <div 
                className="bg-gradient-to-r from-pink-500 to-purple-500 h-3 rounded-full transition-all duration-500"
                style={{ width: `${progressPercentage}%` }}
              ></div>
            </div>
            <p className="text-xs text-gray-500 mt-1">{Math.round(progressPercentage)}% –∑–∞–≤–µ—Ä—à–µ–Ω–æ</p>
          </div>
        </div>

        {/* Goals */}
        <div className="grid grid-cols-2 md:grid-cols-4 gap-4 mb-8">
          {goals.map((goal, idx) => (
            <div key={idx} className={`${goal.color} rounded-lg p-4 text-center`}>
              <span style={{fontSize: 24, display: 'block', marginBottom: 8}}>{goal.icon}</span>
              <p className="text-sm font-medium">{goal.text}</p>
            </div>
          ))}
        </div>

        {/* Week Navigation */}
        <div className="flex justify-center mb-8">
          <div className="bg-white rounded-lg p-2 shadow-sm">
            <div className="flex space-x-2">
              <button
                onClick={() => setCurrentWeek(1)}
                className={`px-6 py-2 rounded-lg font-medium transition-colors duration-200 ${
                  currentWeek === 1 
                    ? 'bg-blue-500 text-white' 
                    : 'text-gray-600 hover:bg-gray-100'
                }`}
              >
                –ù–µ–¥–µ–ª–∏ 1-2
              </button>
              <button
                onClick={() => setCurrentWeek(2)}
                className={`px-6 py-2 rounded-lg font-medium transition-colors duration-200 ${
                  currentWeek === 2 
                    ? 'bg-blue-500 text-white' 
                    : 'text-gray-600 hover:bg-gray-100'
                }`}
              >
                –ù–µ–¥–µ–ª–∏ 3-4
              </button>
            </div>
          </div>
        </div>

        {/* Current Week */}
        <div className="mb-8">
          <div className="text-center mb-6">
            <h2 className="text-2xl font-bold text-gray-800 mb-2">
              {weeks[currentWeek].title}
            </h2>
            <p className="text-gray-600">{weeks[currentWeek].description}</p>
          </div>

          <div className="grid md:grid-cols-3 gap-6">
            {weeks[currentWeek].workouts.map((workout) => (
              <WorkoutCard key={workout.id} workout={workout} />
            ))}
          </div>
        </div>

        {/* Bottom Info Grid */}
        <div className="grid md:grid-cols-2 gap-8">
          {/* Equipment */}
          <div className="bg-white rounded-xl p-6 shadow-sm">
            <h3 className="text-xl font-bold text-gray-800 mb-4 flex items-center">
              <span style={{fontSize: 20, marginRight: 8}}>{emoji.Dumbbell}</span>
              –û–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ
            </h3>
            <div className="space-y-3">
              {equipment.map((item, idx) => (
                <div key={idx} className="flex justify-between items-center p-3 bg-gray-50 rounded-lg">
                  <div>
                    <p className="font-medium">{item.name}</p>
                    <p className="text-sm text-gray-600">{item.count}</p>
                  </div>
                  <div className="text-right">
                    <p className="text-sm font-medium">{item.price}</p>
                    <span className="text-lg">{item.status}</span>
                  </div>
                </div>
              ))}
            </div>
          </div>

          {/* Results */}
          <div className="bg-white rounded-xl p-6 shadow-sm">
            <h3 className="text-xl font-bold text-gray-800 mb-4 flex items-center">
              <span style={{fontSize: 20, marginRight: 8}}>{emoji.Trophy}</span>
              –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —á–µ—Ä–µ–∑ 4 –Ω–µ–¥–µ–ª–∏
            </h3>
            <div className="space-y-3">
              {results.map((result, idx) => (
                <div key={idx} className="flex items-start space-x-3">
                  <span style={{fontSize: 18, marginTop: 2}}>{emoji.CheckCircle}</span>
                  <p className="text-gray-700">{result}</p>
                </div>
              ))}
            </div>
          </div>
        </div>

        {/* Important Rules */}
        <div className="mt-8 bg-gradient-to-r from-red-50 to-pink-50 rounded-xl p-6 border-l-4 border-red-400">
          <h3 className="text-xl font-bold text-red-800 mb-4">‚ö†Ô∏è –í–∞–∂–Ω—ã–µ –ø—Ä–∞–≤–∏–ª–∞</h3>
          <div className="grid md:grid-cols-2 gap-4 text-sm">
            <div>
              <h4 className="font-semibold text-red-700 mb-2">–î–ª—è –∫–æ–ª–µ–Ω–µ–π:</h4>
              <ul className="space-y-1 text-red-600">
                <li>‚Ä¢ –ù–ï –ø—Ä–∏—Å–µ–¥–∞–π –≥–ª—É–±–∂–µ 90¬∞ –ø–µ—Ä–≤—ã–µ 2 –Ω–µ–¥–µ–ª–∏</li>
                <li>‚Ä¢ –í—Å–µ–≥–¥–∞ —Ä–∞–∑–º–∏–Ω–∞–π—Å—è –ø–µ—Ä–µ–¥ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–æ–π</li>
                <li>‚Ä¢ –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–π—Å—è –ø—Ä–∏ –±–æ–ª–∏</li>
                <li>‚Ä¢ –£–∫—Ä–µ–ø–ª—è–π –ø–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ</li>
              </ul>
            </div>
            <div>
              <h4 className="font-semibold text-red-700 mb-2">–¢–µ—Ö–Ω–∏–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏:</h4>
              <ul className="space-y-1 text-red-600">
                <li>‚Ä¢ –î–µ—Ä–∂–∏ —Å–ø–∏–Ω—É –ø—Ä—è–º–æ</li>
                <li>‚Ä¢ –î—ã—à–∏ —Ä–∞–≤–Ω–æ–º–µ—Ä–Ω–æ</li>
                <li>‚Ä¢ –ö–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É–π –¥–≤–∏–∂–µ–Ω–∏—è</li>
                <li>‚Ä¢ –ü–µ–π –≤–æ–¥—É –≤–æ –≤—Ä–µ–º—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏</li>
              </ul>
            </div>
          </div>
        </div>

        {/* Motivation */}
        <div className="mt-8 text-center bg-gradient-to-r from-purple-500 to-pink-500 text-white rounded-xl p-8">
          <h3 className="text-2xl font-bold mb-4">üèÜ –ú–æ—Ç–∏–≤–∞—Ü–∏—è</h3>
          <p className="text-lg mb-2">–ü–µ—Ä–≤—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤–∏–¥–Ω—ã —á–µ—Ä–µ–∑ 2-3 –Ω–µ–¥–µ–ª–∏</p>
          <p className="text-lg mb-4">–ó–Ω–∞—á–∏—Ç–µ–ª—å–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è - —á–µ—Ä–µ–∑ 4-6 –Ω–µ–¥–µ–ª—å!</p>
          <p className="text-2xl font-bold">–ù–∏–∫–∞–∫–∏—Ö –æ—Ç–≥–æ–≤–æ—Ä–æ–∫! üí™ –¢—ã —Å–ø—Ä–∞–≤–∏—à—å—Å—è!</p>
        </div>
      </div>
    </div>
  );
};

export default WorkoutProgram; 